#!/usr/bin/env bash
set -euo pipefail

IMAGE="$1"       # e.g. sp-construction:sha1-1234
CONTAINER="sp_construction"
HOST_PORT=5000
CONTAINER_PORT=5000

echo "Deploying image: ${IMAGE}"

# pull (if image from registry) or ensure image exists locally
docker image inspect "${IMAGE}" > /dev/null 2>&1 || {
  echo "Image not found locally, trying to pull..."
  docker pull "${IMAGE}"
}

# run new container with unique name for safe start
NEW_NAME="${CONTAINER}_new"
docker rm -f "${NEW_NAME}" 2>/dev/null || true

docker run -d --name "${NEW_NAME}" \
  --restart unless-stopped \
  -p "${HOST_PORT}:${CONTAINER_PORT}" \
  "${IMAGE}"

# wait for healthy (use inspect)
for i in {1..20}; do
  HEALTH=$(docker inspect --format='{{json .State.Health}}' "${NEW_NAME}" 2>/dev/null || echo "null")
  if echo "${HEALTH}" | grep -q '"Status":"healthy"'; then
    echo "New container is healthy"
    break
  fi
  echo "Waiting for container to become healthy..."
  sleep 3
done

# swap: stop old container and rename new to main name
docker rm -f "${CONTAINER}" 2>/dev/null || true
docker rename "${NEW_NAME}" "${CONTAINER}" || true

echo "Deployment complete. Current container:"
docker ps --filter "name=${CONTAINER}" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
